---
interface Props {
  service?: string;
  details?: string[];
  additionalInputs?: boolean;
  mainInputFieldPlaceholder: string;
}

const { service, details, additionalInputs, mainInputFieldPlaceholder } =
  Astro.props;
---

<script></script>

<h1 class="font-black text-base uppercase text-app-light-gray">
  {service}
</h1>
<ul class="text-xs opacity-50 font-semibold pb-2">
  {details && details.map((d) => <li>{d}</li>)}
</ul>
<form method="POST">
  {
    additionalInputs && (
      <div class="flex justify-evenly">
        <input
          autocorrect="off"
          type="text"
          name="starts-with"
          id="starts-with"
          placeholder="Starting with"
          class="block uppercase w-full my-2 mr-1 p-2 pl-2 text-xl font-black placeholder:text-xs items-center rounded-lg text-center text-app-light-gray bg-slate-800 focus:bg-app-dark-blue focus:outline-none"
        />
        <input
          autocorrect="off"
          type="text"
          name="ends-with"
          id="ends-with"
          placeholder="Ending with"
          class="block uppercase w-full my-2 ml-1 p-2 pl-2 text-xl font-black placeholder:text-xs items-center rounded-lg text-center text-app-light-gray bg-slate-800 focus:bg-app-dark-blue focus:outline-none"
        />
      </div>
    )
  }
  <input
    autocorrect="off"
    type="text"
    name="letters"
    id="default-search"
    placeholder={mainInputFieldPlaceholder}
    class="block uppercase w-full p-4 pl-2 text-xl font-black items-center placeholder:text-xs rounded-lg text-center text-app-light-gray bg-slate-800 focus:bg-app-dark-blue focus:outline-none focus:p-6"
    required
  />

  <!-- <input id="submit-form" name="submit-form" type="submit" hidden /> -->
</form>
