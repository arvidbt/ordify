---
import InputField from "@/components/InputField.astro";
import WordContainer from "@/components/WordContainer.astro";
import Layout from "@/layout/Layout.astro";
import { wordlib } from "@/lib/word-service";

const wordsSimilarTo: string[] = [];

if (Astro.request.method === "POST") {
  try {
    const data = await Astro.request.formData();
    const payload = data.get("letters") as string;
    wordsSimilarTo.push(...wordlib.similarTo(payload));
  } catch (error) {
    if (error instanceof Error) {
      console.error(error.message);
    }
  }
}
---

<Layout>
  <p class="text-xs font-semibold opacity-75 py-3">
    The <span class="text-app-light-blue">similarTo</span>
     feature checks for words that are similar to another word, based upon
    Levenshtein distance. May not be very similar.
  </p>

  <InputField service="Words similar to:" />
  <WordContainer result={wordsSimilarTo} />
</Layout>
